/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package gsp;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Security extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1639508203581918859L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Security\",\"namespace\":\"gsp\",\"fields\":[{\"name\":\"CUSIP\",\"type\":\"string\"},{\"name\":\"Description\",\"type\":\"string\"},{\"name\":\"MaturityDate\",\"type\":\"string\",\"logicalType\":\"date\"},{\"name\":\"Coupon\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Security> ENCODER =
      new BinaryMessageEncoder<Security>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Security> DECODER =
      new BinaryMessageDecoder<Security>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Security> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Security> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Security>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Security to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Security from a ByteBuffer. */
  public static Security fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence CUSIP;
  @Deprecated public java.lang.CharSequence Description;
  @Deprecated public java.lang.CharSequence MaturityDate;
  @Deprecated public double Coupon;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Security() {}

  /**
   * All-args constructor.
   * @param CUSIP The new value for CUSIP
   * @param Description The new value for Description
   * @param MaturityDate The new value for MaturityDate
   * @param Coupon The new value for Coupon
   */
  public Security(java.lang.CharSequence CUSIP, java.lang.CharSequence Description, java.lang.CharSequence MaturityDate, java.lang.Double Coupon) {
    this.CUSIP = CUSIP;
    this.Description = Description;
    this.MaturityDate = MaturityDate;
    this.Coupon = Coupon;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CUSIP;
    case 1: return Description;
    case 2: return MaturityDate;
    case 3: return Coupon;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CUSIP = (java.lang.CharSequence)value$; break;
    case 1: Description = (java.lang.CharSequence)value$; break;
    case 2: MaturityDate = (java.lang.CharSequence)value$; break;
    case 3: Coupon = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'CUSIP' field.
   * @return The value of the 'CUSIP' field.
   */
  public java.lang.CharSequence getCUSIP() {
    return CUSIP;
  }

  /**
   * Sets the value of the 'CUSIP' field.
   * @param value the value to set.
   */
  public void setCUSIP(java.lang.CharSequence value) {
    this.CUSIP = value;
  }

  /**
   * Gets the value of the 'Description' field.
   * @return The value of the 'Description' field.
   */
  public java.lang.CharSequence getDescription() {
    return Description;
  }

  /**
   * Sets the value of the 'Description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.Description = value;
  }

  /**
   * Gets the value of the 'MaturityDate' field.
   * @return The value of the 'MaturityDate' field.
   */
  public java.lang.CharSequence getMaturityDate() {
    return MaturityDate;
  }

  /**
   * Sets the value of the 'MaturityDate' field.
   * @param value the value to set.
   */
  public void setMaturityDate(java.lang.CharSequence value) {
    this.MaturityDate = value;
  }

  /**
   * Gets the value of the 'Coupon' field.
   * @return The value of the 'Coupon' field.
   */
  public java.lang.Double getCoupon() {
    return Coupon;
  }

  /**
   * Sets the value of the 'Coupon' field.
   * @param value the value to set.
   */
  public void setCoupon(java.lang.Double value) {
    this.Coupon = value;
  }

  /**
   * Creates a new Security RecordBuilder.
   * @return A new Security RecordBuilder
   */
  public static gsp.Security.Builder newBuilder() {
    return new gsp.Security.Builder();
  }

  /**
   * Creates a new Security RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Security RecordBuilder
   */
  public static gsp.Security.Builder newBuilder(gsp.Security.Builder other) {
    return new gsp.Security.Builder(other);
  }

  /**
   * Creates a new Security RecordBuilder by copying an existing Security instance.
   * @param other The existing instance to copy.
   * @return A new Security RecordBuilder
   */
  public static gsp.Security.Builder newBuilder(gsp.Security other) {
    return new gsp.Security.Builder(other);
  }

  /**
   * RecordBuilder for Security instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Security>
    implements org.apache.avro.data.RecordBuilder<Security> {

    private java.lang.CharSequence CUSIP;
    private java.lang.CharSequence Description;
    private java.lang.CharSequence MaturityDate;
    private double Coupon;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(gsp.Security.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CUSIP)) {
        this.CUSIP = data().deepCopy(fields()[0].schema(), other.CUSIP);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Description)) {
        this.Description = data().deepCopy(fields()[1].schema(), other.Description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MaturityDate)) {
        this.MaturityDate = data().deepCopy(fields()[2].schema(), other.MaturityDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Coupon)) {
        this.Coupon = data().deepCopy(fields()[3].schema(), other.Coupon);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Security instance
     * @param other The existing instance to copy.
     */
    private Builder(gsp.Security other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.CUSIP)) {
        this.CUSIP = data().deepCopy(fields()[0].schema(), other.CUSIP);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Description)) {
        this.Description = data().deepCopy(fields()[1].schema(), other.Description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MaturityDate)) {
        this.MaturityDate = data().deepCopy(fields()[2].schema(), other.MaturityDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Coupon)) {
        this.Coupon = data().deepCopy(fields()[3].schema(), other.Coupon);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'CUSIP' field.
      * @return The value.
      */
    public java.lang.CharSequence getCUSIP() {
      return CUSIP;
    }

    /**
      * Sets the value of the 'CUSIP' field.
      * @param value The value of 'CUSIP'.
      * @return This builder.
      */
    public gsp.Security.Builder setCUSIP(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.CUSIP = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'CUSIP' field has been set.
      * @return True if the 'CUSIP' field has been set, false otherwise.
      */
    public boolean hasCUSIP() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'CUSIP' field.
      * @return This builder.
      */
    public gsp.Security.Builder clearCUSIP() {
      CUSIP = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return Description;
    }

    /**
      * Sets the value of the 'Description' field.
      * @param value The value of 'Description'.
      * @return This builder.
      */
    public gsp.Security.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Description' field has been set.
      * @return True if the 'Description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Description' field.
      * @return This builder.
      */
    public gsp.Security.Builder clearDescription() {
      Description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'MaturityDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaturityDate() {
      return MaturityDate;
    }

    /**
      * Sets the value of the 'MaturityDate' field.
      * @param value The value of 'MaturityDate'.
      * @return This builder.
      */
    public gsp.Security.Builder setMaturityDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.MaturityDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'MaturityDate' field has been set.
      * @return True if the 'MaturityDate' field has been set, false otherwise.
      */
    public boolean hasMaturityDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'MaturityDate' field.
      * @return This builder.
      */
    public gsp.Security.Builder clearMaturityDate() {
      MaturityDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Coupon' field.
      * @return The value.
      */
    public java.lang.Double getCoupon() {
      return Coupon;
    }

    /**
      * Sets the value of the 'Coupon' field.
      * @param value The value of 'Coupon'.
      * @return This builder.
      */
    public gsp.Security.Builder setCoupon(double value) {
      validate(fields()[3], value);
      this.Coupon = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Coupon' field has been set.
      * @return True if the 'Coupon' field has been set, false otherwise.
      */
    public boolean hasCoupon() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Coupon' field.
      * @return This builder.
      */
    public gsp.Security.Builder clearCoupon() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Security build() {
      try {
        Security record = new Security();
        record.CUSIP = fieldSetFlags()[0] ? this.CUSIP : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Description = fieldSetFlags()[1] ? this.Description : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.MaturityDate = fieldSetFlags()[2] ? this.MaturityDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Coupon = fieldSetFlags()[3] ? this.Coupon : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Security>
    WRITER$ = (org.apache.avro.io.DatumWriter<Security>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Security>
    READER$ = (org.apache.avro.io.DatumReader<Security>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
